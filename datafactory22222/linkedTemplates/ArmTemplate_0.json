{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactory22222"
		},
		"Stackoverflow_synapse_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Stackoverflow_synapse'"
		},
		"To_Github_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'To_Github'"
		},
		"github_data_lake_gen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'github_data_lake_gen2'"
		},
		"Data_Lake_Storage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dataengineeraccount.dfs.core.windows.net/"
		},
		"Rest_Api_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://de-course-ingest-api.azurewebsites.net/api/"
		},
		"To_Github_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dataengineeraccount.dfs.core.windows.net/"
		},
		"github_data_lake_gen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://decoursesacc.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Data_Lake_Storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Data_Lake_Storage_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rest_Api')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Rest_Api_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stackoverflow_synapse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('Stackoverflow_synapse_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/To_Github')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('To_Github_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('To_Github_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/github_data_lake_gen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('github_data_lake_gen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('github_data_lake_gen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Landing_CompanyDetail')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Data_Lake_Storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"yyyymmdd": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('company_detail_', dataset().yyyymmdd, '.json')",
							"type": "Expression"
						},
						"folderPath": "company_detail",
						"fileSystem": "landing"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Data_Lake_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Landing_GitHubArchiveDay')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Data_Lake_Storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"yyyymmdd": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('guthubarchive_day_', dataset().yyyymmdd, '.json')",
							"type": "Expression"
						},
						"folderPath": "github",
						"fileSystem": "landing"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Data_Lake_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Landing_StackoverflowPostAnswers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Data_Lake_Storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().file_name, '.csv')",
							"type": "Expression"
						},
						"folderPath": "stackoverflow",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Data_Lake_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Landing_StackoverflowPostQuestions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Data_Lake_Storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_file_name_2": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().p_file_name_2, '.csv')",
							"type": "Expression"
						},
						"folderPath": "stackoverflow",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Data_Lake_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_CompanyDetail')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Rest_Api",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"yyyymmdd": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('get_company_data_api?p_load_date=', dataset().yyyymmdd)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Rest_Api')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_GitHubArchiveDay')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "github_data_lake_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"yyyymmdd": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('githubarchive_day_',dataset().yyyymmdd,'.json')\n",
							"type": "Expression"
						},
						"folderPath": "github",
						"fileSystem": "external"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/github_data_lake_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_StackoverflowPostAnswers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Stackoverflow_synapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "accepted_answer_id",
						"type": "nvarchar"
					},
					{
						"name": "answer_count",
						"type": "nvarchar"
					},
					{
						"name": "comment_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "community_owned_date",
						"type": "nvarchar"
					},
					{
						"name": "creation_date",
						"type": "nvarchar"
					},
					{
						"name": "favorite_count",
						"type": "nvarchar"
					},
					{
						"name": "last_activity_date",
						"type": "nvarchar"
					},
					{
						"name": "last_edit_date",
						"type": "nvarchar"
					},
					{
						"name": "last_editor_display_name",
						"type": "nvarchar"
					},
					{
						"name": "last_editor_user_id",
						"type": "nvarchar"
					},
					{
						"name": "owner_display_name",
						"type": "nvarchar"
					},
					{
						"name": "owner_user_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "parent_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "post_type_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "score",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "tags",
						"type": "nvarchar"
					},
					{
						"name": "view_count",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "stackoverflow",
					"table": "stackoverflow_post_answers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Stackoverflow_synapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_StackoverflowPostQuestions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Stackoverflow_synapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "accepted_answer_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "answer_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "comment_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "community_owned_date",
						"type": "nvarchar"
					},
					{
						"name": "creation_date",
						"type": "nvarchar"
					},
					{
						"name": "favorite_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "last_activity_date",
						"type": "nvarchar"
					},
					{
						"name": "last_edit_date",
						"type": "nvarchar"
					},
					{
						"name": "last_editor_display_name",
						"type": "nvarchar"
					},
					{
						"name": "last_editor_user_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "owner_display_name",
						"type": "nvarchar"
					},
					{
						"name": "owner_user_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "parent_id",
						"type": "nvarchar"
					},
					{
						"name": "post_type_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "score",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "tags",
						"type": "nvarchar"
					},
					{
						"name": "view_count",
						"type": "bigint",
						"precision": 19
					}
				],
				"typeProperties": {
					"schema": "stackoverflow",
					"table": "stackoverflow_post_questions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Stackoverflow_synapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/github')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_load_date",
							"value": {
								"value": "@if(not(equals(pipeline().parameters.p_load_date, null)), pipeline().parameters.p_load_date, getPastTime(1, 'Day', 'yyyyMMdd'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_GitHubArchiveDay",
								"type": "DatasetReference",
								"parameters": {
									"yyyymmdd": {
										"value": "@variables('v_load_date')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Landing_GitHubArchiveDay",
								"type": "DatasetReference",
								"parameters": {
									"yyyymmdd": {
										"value": "@variables('v_load_date')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_load_date": {
						"type": "string"
					}
				},
				"variables": {
					"v_load_date": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_GitHubArchiveDay')]",
				"[concat(variables('factoryId'), '/datasets/Landing_GitHubArchiveDay')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest_api')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "v_load_date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_load_date",
							"value": {
								"value": "@if(not(equals(pipeline().parameters.p_load_date, null)), pipeline().parameters.p_load_date, getPastTime(1, 'day', 'yyyyMMdd'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "v_load_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_CompanyDetail",
								"type": "DatasetReference",
								"parameters": {
									"yyyymmdd": {
										"value": "@variables('v_load_date')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Landing_CompanyDetail",
								"type": "DatasetReference",
								"parameters": {
									"yyyymmdd": {
										"value": "@variables('v_load_date')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_load_date": {
						"type": "string"
					}
				},
				"variables": {
					"v_load_date": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_CompanyDetail')]",
				"[concat(variables('factoryId'), '/datasets/Landing_CompanyDetail')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stackoverflow_answer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"additionalColumns": [
									{
										"name": "datetime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Source_StackoverflowPostAnswers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Landing_StackoverflowPostAnswers",
								"type": "DatasetReference",
								"parameters": {
									"file_name": {
										"value": "@variables('v_file_name')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_file_name",
							"value": {
								"value": "@pipeline().parameters.p_file_name",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_file_name": {
						"type": "string"
					}
				},
				"variables": {
					"v_file_name": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_StackoverflowPostAnswers')]",
				"[concat(variables('factoryId'), '/datasets/Landing_StackoverflowPostAnswers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stackoverflow_question')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"additionalColumns": [
									{
										"name": "datetime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Source_StackoverflowPostQuestions",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Landing_StackoverflowPostQuestions",
								"type": "DatasetReference",
								"parameters": {
									"p_file_name_2": {
										"value": "@variables('v_file_name2')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_file_name2",
							"value": {
								"value": "@pipeline().parameters.p_file_name_2",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_file_name_2": {
						"type": "string"
					}
				},
				"variables": {
					"v_file_name2": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_StackoverflowPostQuestions')]",
				"[concat(variables('factoryId'), '/datasets/Landing_StackoverflowPostQuestions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "github",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "github",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"p_load_date": {
									"value": "@variables('v_load_date')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "stackoverflow_answers",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "stackoverflow_answer",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"p_file_name": {
									"value": "@variables('v_file_name')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "rest_api",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "rest_api",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"p_load_date": {
									"value": "@variables('v_load_date')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "stackoverflow_questions",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set variable3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "stackoverflow_question",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"p_file_name_2": {
									"value": "@variables('v_file_name_2')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_load_date",
							"value": {
								"value": "@if(not(equals(pipeline().parameters.p_load_date, null)), pipeline().parameters.p_load_date, getPastTime(1, 'day', 'yyyyMMdd'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_file_name",
							"value": {
								"value": "@pipeline().parameters.p_file_name",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_file_name_2",
							"value": {
								"value": "@pipeline().parameters.p_file_name_2",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_load_date": {
						"type": "string"
					},
					"p_file_name": {
						"type": "string"
					},
					"p_file_name_2": {
						"type": "string"
					}
				},
				"variables": {
					"v_load_date": {
						"type": "String"
					},
					"v_file_name": {
						"type": "String"
					},
					"v_file_name_2": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/github')]",
				"[concat(variables('factoryId'), '/pipelines/stackoverflow_answer')]",
				"[concat(variables('factoryId'), '/pipelines/rest_api')]",
				"[concat(variables('factoryId'), '/pipelines/stackoverflow_question')]"
			]
		}
	]
}